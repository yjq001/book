name: Docker Build and Push

# 触发条件：推送到main分支、打标签或手动触发
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      ref:
        description: '要检出的分支、标签或提交SHA'
        required: true
        default: 'main'
        type: string
      version:
        description: 'Docker镜像版本标签'
        required: false
        default: 'latest'
        type: string

env:
  REGISTRY: ghcr.io
  SOURCE_REPO: yjq001/money-backend
  IMAGE_NAME: money-backend
  IMAGE_OWNER: yjq001

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 第1步：从指定仓库检出代码
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SOURCE_REPO }}
          ref: ${{ inputs.ref || 'main' }}
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 1

      # 第2步：验证检出的代码
      - name: Verify checkout
        run: |
          echo "检出源码: ${{ env.SOURCE_REPO }}"
          echo "分支/ref: ${{ inputs.ref || 'main' }}"
          echo "工作目录: $(pwd)"
          ls -la
          if [ -f "Dockerfile" ]; then
            echo "Dockerfile 存在"
            cat Dockerfile
          else
            echo "错误: Dockerfile不存在!"
            exit 1
          fi

      # 第3步：设置Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 第4步：登录Container Registry
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 第5步：生成Docker镜像元数据
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ inputs.version || 'latest' }},enable=${{ github.event_name == 'workflow_dispatch' }}
            type=ref,event=branch,enable=${{ github.event_name != 'workflow_dispatch' }}
            type=ref,event=pr,enable=${{ github.event_name != 'workflow_dispatch' }}
            type=semver,pattern={{version}},enable=${{ github.event_name != 'workflow_dispatch' }}
            type=sha,format=long,enable=${{ github.event_name != 'workflow_dispatch' }}

      # 第6步：构建和推送Docker镜像
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: true
          platforms: linux/amd64
          provenance: false
        timeout-minutes: 15

      # 显示构建结果
      - name: Image info
        if: success()
        run: |
          echo "构建成功!"
          echo "镜像标签: ${{ steps.meta.outputs.tags }}" 
